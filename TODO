Commands:
=========

These are some of the commands I can think of being useful. Some of the,
e.g., email may not be necessary as git can do that for us.

	name		done?	docs?	description?
-------------------------------------------------------------------------------

	<>		done	done	Default/no-command/usage help
	add		done	done	add a file
	applied		done	done	list applied patches
	delete		done	done	delete a patch from queue
	diff		done	done	various diffs
	files		done	done	list files topmost patch modifies
	fold		done	done	fold named patches into current
	graph		done	done	generate a patch dependency graph
	header		done	done	print the header for a patch
	help		done	done	display help
	import		done	done	import a patch
	import-commit	done	done	import a (series of) commit(s) as patches
	init		done	done	initialize patch queue
	merge
	new		done	done	create a new patch
	next		done	done	display next patch on the stack
	patchbomb	done	done	email a series of commits as patches
	pop		done	done	pop one or more patches
	prev		done	done	display previous patch on the stack
	push		done	done	push one of more patches
	rebase		done	done	rebase the current patches
	rpull				pull from a repo
	rpush				push to a repo
	rename				rename a patch
	refresh		done	done	refresh the current patch
	rm		done	done	remove a file
	series		done	done	list all patches
	status		done	done	display current working dir status
	top		done	done	display current patch name
	unapplied	done	done	display unapplied patches


Misc Bugs/Enhancements:
=======================

Here are some things I want to do one of these days...

- Make things work with an arbitrary point in history
  $ git-checkout sometag
  $ guilt-init
  *poop*

- Fix push/pop regression tests to cover --all/multi-patch cases

- Add more regression tests:

	- guilt-refresh --git

- Fix path munging in push_patch

- Make guilt-* work from any dir ( => make regression tests to check that)

- Make things as portable as git

- Make sure whitespace in patch names doesn't break anything ( => make
  regression tests)

- Make guilt-help more intelligent about where it looks for man pages (maybe
  try adding `dirname $0`/../man/ to the MANPATH inside guilt-help?)

- Autotagging creates ${branch}_{top,bottom,base} tags, allow easy removal
  of such tags

- If autotagging is disabled, should we remove any corresponding tags? Tags
  could have been disabled because of name collisions.

- guilt-rebase: create at least _some_ regression tests

- guilt-new, guilt-fork, etc.: warn/die if the new patch name ends with '~'

- guilt-diff: more modes

- refresh, add options --strip-trailing-whitespace, --diffstat
